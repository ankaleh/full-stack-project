{"version":3,"sources":["styles/div.js","styles/textStyles.js","components/Notification.js","styles/button.js","images/imageSummer.jpg","images/imageAutumn.jpg","images/imageWinter.jpg","images/imageWater.jpg","components/Post.js","styles/input.js","components/FormikInput.js","components/CustomCalendar.js","components/AddPost.js","components/Posts.js","components/Task.js","components/AddTask.js","images/image.jpg","components/Tasks.js","hooks/useSignIn.js","components/SignUp.js","components/SignIn.js","components/SignOut.js","components/User.js","images/imageGoldeneye.jpg","components/Reservations.js","App.js","index.js"],"names":["Margin","styled","div","NotificationMessage","Navigation","AccountInfo","Page","attrs","props","flexDirection","justifyContent","alignItems","alignItmes","BackgroundImage","height","backgroundImage","StyledPost","StyledTask","StyledTextContainer","Info","Row","Column","Borderline","GuestsContainer","HeadingSecondary","h1","TextPrimary","span","TextSecondary","WhiteText","BlackText","LinkText","Link","LinkTextColored","InfoText","ErrorText","HeaderInImage","bottom","LiInImage","li","Notification","notification","includes","Button","button","width","background","ME","REMOVE_POST","ALL_POSTS","Post","post","showNotification","useState","dialogOpen","setDialogOpen","allGuests","guests","map","g","name","concat","unidentifiedGuests","useMutation","onError","error","graphQLErrors","extensions","exception","errors","update","store","response","dataInStore","readQuery","query","evict","fieldName","broadcast","writeQuery","data","allPosts","filter","p","id","removePost","useApolloClient","history","useHistory","handleClickRemove","event","a","variables","push","e","console","log","handleClose","month","Date","startDate","getMonth","imageWinter","imageAutumn","imageSummer","imageWater","getImage","format","endDate","writtenBy","text","reduce","prev","curr","me","onClick","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Input","input","border","Text","textarea","FormikInput","useField","field","meta","helpers","showError","touched","type","onChange","target","setValue","value","onBlur","setTouched","CustomCalendar","checkDayRange","reservedDayRanges","selectedDayRange","datesNotAdded","dayRange","selectRange","onClickDay","tileDisabled","date","length","datesArray","eachDayOfInterval","start","end","flat","find","dDate","ADD_POST","All_USERS","AddPost","allUsers","useQuery","users","setUsers","addPost","calendarVisible","setCalendarVisible","setSelectedDayRange","setDatesNotAdded","showWhenCalendarVisible","display","useEffect","message","onSubmit","values","resetForm","u","validationSchema","yup","shape","required","when","is","then","min","of","loading","style","initialValues","handleSubmit","handleChange","handleBlur","placeholder","labelId","Select","displayEmpty","multiple","renderValue","selectedList","user","Chip","label","MenuItem","render","arrayHelpers","guest","index","remove","insert","Posts","posts","setPosts","useParams","searchInput","setSearchInput","list","renderItem","to","renderWhenEmpty","searchBy","searchTerm","MARK_AS_DONE","REMOVE_TASK","ALL_TASKS","Task","modify","identify","markAsDone","fields","done","cachedDone","allTasks","t","removeTask","handleClickMarkAsDone","description","preventDefault","task","addedBy","doneBy","ADD_TASK","TaskForm","AddTask","addTask","Tasks","tasks","setTasks","LOGIN","useSignIn","login","result","client","signIn","username","password","localStorage","setItem","resetStore","CREATE_USER","SignUpForm","SignUp","createUser","max","passwordConf","oneOf","SignInForm","SignIn","SignOut","clear","goBack","User","setUser","ADD_RESERVATION","ALL_RESERVATIONS","REMOVE_RESERVATION","Reservations","setReservedDayRanges","myReservations","setMyReservations","allReservations","addReservation","removeReservation","r","reservedBy","handleClickBook","imageGoldeneye","array","areIntervalsOverlapping","b","App","setNotification","setTimeout","path","authLink","setContext","_","headers","token","getItem","authorization","httpLink","HttpLink","uri","ApolloClient","cache","InMemoryCache","link","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.df8011fa.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Margin = styled.div`\n    background: #8d9db6;\n    height: 80px;\n    border-bottom: 2px solid white;\n\n    display: flex;\n    justify-content: center;\n`//#bc5a45\n//#F0F8FF\n//alkup. #8d9db6\n\nexport const NotificationMessage = styled.div`\n    font: 15px Verdana, sans-serif;\n    background: #F7F7F7;\n\n    height: 70px;\n    padding: 5px;\n\n    border-bottom: 2px solid white;\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n//#8d9db6\nexport const Navigation = styled.div`\n    background: #b7d7e8;\n    padding: 10px;\n    border-bottom: 2px solid white;\n    \n    height: 50px;\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n`\nexport const AccountInfo = styled.div`\n    background: #8d9db6;\n    padding: 10px;\n    border-bottom: 2px solid white;\n    \n    height: 50px;\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-end;\n    align-items: center;\n\n`\nexport const Page = styled.div.attrs(props => ({\n  flexDirection: props.flexDirection,\n  justifyContent: props.justifyContent,\n  alignItems: props.alignItmes\n}))`\n    background: #F7F7F7;\n    \n    padding: 50px;\n    border-bottom: 2px solid white;\n\n    display: flex;\n    flex-direction:  ${props => props.flexDirection};\n    justify-content: ${props => props.justifyContent};\n    align-items: ${props => props.alignItems};\n`\n\nexport const BackgroundImage = styled.div.attrs(props => ({\n  height: props.height,\n  backgroundImage: props.backgroundImage,\n}))`\n    background-image: url(${props => props.backgroundImage});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    position: relative;\n\n    height: ${props => props.height};\n    width: 100%;\n    border-bottom: 2px solid white;\n`\n\nexport const StyledPost = styled.div`\n    border: 2px solid lightgrey;\n    background: white;\n    \n    max-width: 300px;\n    height: 100px;\n    border-radius: 5px;\n    padding: 30px;\n\n    margin: 10px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    \n    white-space: nowrap;    \n    text-overflow: ellipsis;\n    overflow: hidden;\n\n`\n//#618685 vihreä\nexport const StyledTask = styled.div`\n    border: 2px solid  lightgrey;\n    background: white;\n    width: 300px;\n    height: 300px;\n    border-radius: 5px;\n    margin: 10px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    \n    white-space: nowrap;    \n    text-overflow: ellipsis;\n    overflow: hidden;\n\n`\nexport const StyledTextContainer = styled.div`\n    padding: 40px;\n    margin: 10px;\n    border: 2px solid  #618685;\n    background: white;\n    border-radius: 15px;\n`\n\n\nexport const Info = styled.div`\n    padding: 20px;\n    border: 2px solid #618685;\n    background: white;\n    width: 300px;\n    height: 100px;\n    border-radius: 5px;\n    \n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    \n`\n\nexport const Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    \n`\nexport const Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    \n`\n\nexport const Borderline = styled.div`\n    background: #bc5a45;\n    min-width: 30px;\n    margin: 20px;\n`\nexport const GuestsContainer = styled.div`\n    border: 2px solid lightgrey;\n    background: white;\n    width: 500px;\n    border-radius: 5px;\n    padding: 30px;\n\n    margin: 10px;\n\n    display: flex;\n    \n    flex-direction: column;\n    \n\n`\n\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const HeadingSecondary = styled.h1`\n    font: 30px Helvetica, Sans-Serif;\n`\nexport const HeadingPrimary = styled.span`\n        color: #FFFFFF; \n        font:  50px Helvetica, Sans-Serif; \n\n        padding: 20px;\n`\nexport const TextPrimary = styled.span`\n    font: 20px Helvetica, Sans-Serif;\n    line-height: 1.6;\n`\nexport const TextSecondary = styled.span`\n    font: 15px Helvetica, Sans-Serif;\n    color: black;\n    padding: 10px;\n`\nexport const WhiteText = styled.span`\n    font: 15px Helvetica, Sans-Serif;\n    color: #FFFFFF;\n    font-weight: bold;\n`\nexport const BlackText = styled.span`\n    font: 15px Helvetica, Sans-Serif;\n    color: black;\n    font-weight: bold;\n    padding-right: 10px;\n    line-height: 1.6;\n`\nexport const LinkText = styled(Link)`\n    font: 15px Helvetica, Sans-Serif;\n    color: #FFFFFF;\n    font-weight: bold;\n    padding-right: 10px;\n`\n//#FFFFFF\nexport const LinkTextColored = styled(Link)`\n    font: 15px Helvetica, Sans-Serif;\n    color: black;\n    font-weight: bold;\n    \n`\n//##034f84 nätti violetti\nexport const InfoText = styled.span`\n    font: 15px Helvetica, Sans-Serif;\n    color: #618685\n`\nexport const ErrorText = styled.span`\n    font: 15px Helvetica, Sans-Serif;\n    color: #bc5a45\n`\n\nexport const HeaderInImage = styled.span.attrs(props => ({\n  bottom: props.bottom,\n}))`\n    color: #FFFFFF; \n    font: bold 60px Helvetica, Sans-Serif; \n    letter-spacing: 2px;  \n    background: rgba(0, 0, 0, 0.5);\n    padding: 20px;\n    margin: 0px;\n\n    position: absolute;\n    bottom: ${props => props.bottom};\n`\nexport const LiInImage = styled.li.attrs(props => ({\n  bottom: props.bottom,\n}))`\n    color: #FFFFFF; \n    font: bold 30px Helvetica, Sans-Serif; \n    letter-spacing: 2px;  \n    background: rgba(0, 0, 0, 0.5);\n\n    padding-right: 200px;\n    padding-left: 20px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    margin: 0px;\n\n    position: absolute;\n    bottom: ${props => props.bottom};\n    left: 60%;\n    right: 0%;\n`\n//tekstin marginaali vaikuttaa taustakuvan korkeuteen\n\n//background: rgba(0, 0, 0, 0.5);\n//padding: 10px;\n\n\n\n\n\n\n\n","import { NotificationMessage } from '../styles/div'\nimport { InfoText, ErrorText } from '../styles/textStyles'\nimport React from 'react'\n\nconst Notification = ({ notification }) => {\n\n  if (!notification) {\n    return null\n  }\n\n  if (notification.includes('Tapahtui virhe')) {\n    return (\n      <NotificationMessage>\n        <ErrorText>{notification}</ErrorText>\n      </NotificationMessage>\n\n    )\n  }\n\n  return (\n    <NotificationMessage>\n      <InfoText>{notification}</InfoText>\n    </NotificationMessage>\n  )\n}\n\nexport default Notification\n","import styled from 'styled-components'\n\nexport const Button = styled.button.attrs(props => ({\n  width: props.width,\n  height: props.height,\n  background: props.background\n}))`\n    background: ${props => props.background};\n    font: 1em Verdana, sans-serif;\n    color: white;\n    padding: 10px;\n    border: 2px solid white;\n    border-radius: 5px;\n    margin-top: 5px;\n    margin-right: 5px;\n    width: ${props => props.width};\n    height: ${props => props.height};\n`\n//background: #bc5a45;","export default __webpack_public_path__ + \"static/media/imageSummer.b25a3db1.jpg\";","export default __webpack_public_path__ + \"static/media/imageAutumn.e26d8bd3.jpg\";","export default __webpack_public_path__ + \"static/media/imageWinter.13e1e03e.jpg\";","export default __webpack_public_path__ + \"static/media/imageWater.cb566ea1.jpg\";","import React, { useState } from 'react'\nimport { useApolloClient, useMutation } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { Row, Page, StyledTextContainer, BackgroundImage } from '../styles/div'\nimport { BlackText, HeaderInImage, TextPrimary, TextSecondary } from '../styles/textStyles'\nimport { Button } from '../styles/button'\n\nimport format from 'date-fns/format'\nimport { loader } from 'graphql.macro'\n\nimport imageSummer from '../images/imageSummer.jpg'\nimport imageAutumn from '../images/imageAutumn.jpg'\nimport imageWinter from '../images/imageWinter.jpg'\nimport imageWater from '../images/imageWater.jpg'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst ME = loader('../graphql/queries/me.graphql')\nconst REMOVE_POST = loader('../graphql/mutations/removePost.graphql')\nconst ALL_POSTS = loader('../graphql/queries/allPosts.graphql')\n\nconst Post = ({ post, showNotification }) => {\n\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  const allGuests = post.guests.map(g => g.name).concat(post.unidentifiedGuests)\n\n  const getImage = () => {\n    const month = new Date(post.startDate).getMonth()\n    if (month>9 || month<2) {\n      return imageWinter\n    }\n    if (month>8) {\n      return imageAutumn\n    }\n    else if (month>4) {\n      return imageSummer\n    }\n\n    return imageWater\n  }\n\n  const [ removePost ] = useMutation(REMOVE_POST, {\n    onError: (error) => {\n      showNotification(`Tapahtui virhe: ${error&&error.graphQLErrors[0]?error.graphQLErrors[0].extensions.exception.errors:{}}`)\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery({ query: ALL_POSTS })\n      if (dataInStore) {\n        store.evict({\n          fieldName: 'allPosts',\n          broadcast: false,\n        })\n        store.writeQuery({\n          query: ALL_POSTS,\n          data: {\n            allPosts: dataInStore.allPosts.filter(p => p.id !== response.data.removePost.id)\n          }\n        })\n      }\n    } })\n\n\n\n  const client = useApolloClient()\n  const data = client.readQuery({ query: ME })\n  const history = useHistory()\n  //console.log(data.me.name)\n\n  const handleClickRemove = async (event, id) => {\n    try {\n      removePost({\n        variables: { id }\n      })\n      history.push('/vieraskirja')\n      showNotification('Merkintä on nyt poistettu!')\n    } catch(e) {\n      console.log(e)\n      showNotification(`Tapahtui virhe: ${e}`)\n    }\n  }\n\n  const handleClickOpen = () => {\n    setDialogOpen(true)\n  }\n\n  const handleClose = () => {\n    setDialogOpen(false)\n  }\n\n  return (\n    <div>\n      <BackgroundImage height='400px' backgroundImage={() => getImage()}><HeaderInImage bottom='0%'>{`${format(new Date(post.startDate), 'dd.MM.yyyy')} - ${format(new Date(post.endDate), 'dd.MM.yyyy')}`}</HeaderInImage></BackgroundImage>\n      <Page flexDirection='column' alignItems='center'>\n        <BlackText>{post.writtenBy.name} kirjoitti:</BlackText>\n\n        <StyledTextContainer>\n          <TextSecondary>{post.text}</TextSecondary>\n        </StyledTextContainer>\n\n        <Row><TextPrimary>{allGuests.reduce((prev, curr) => `${prev}, ${curr}`)}</TextPrimary></Row>\n        {data.me.id === post.writtenBy.id\n          ? <div><Button background='lightgrey' height='40px' width='500px' onClick={handleClickOpen}>Poista merkintä</Button>\n            <Dialog\n              open={dialogOpen}\n              onClose={handleClose}\n            >\n              <DialogTitle >{'Haluatko varmasti poistaa merkinnän?'}</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                Jos poistat vieraskirjamerkinnän, se ei ole enää palautettavissa. Haluatko silti poistaa sen?\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button background='lightgrey' onClick={handleClose}>\n                En halua\n                </Button>\n                <Button background='lightgrey' onClick={(e) => {\n                  handleClose()\n                  handleClickRemove(e, post.id)}} >\n                Haluan\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n          : null}\n\n      </Page>\n\n\n    </div>\n  )\n\n}\nexport default Post\n","import styled from 'styled-components'\n\nexport const Input = styled.input.attrs(props => ({\n  width: props.width,\n  height: props.height,\n  border: props.border\n}))`\n    background: white;\n    font: 1em Helvetica, sans-serif;\n    padding: 10px;\n    border: ${props => props.border};\n    width: ${props => props.width};\n    height: ${props => props.height};\n    border-radius: 5px;\n    margin-top: 10px;\n`\n//border: 2px solid #bc5a45;\n\nexport const Text = styled.textarea.attrs(props => ({\n  border: props.border,\n  width: props.width,\n  height: props.height\n}))`\n    background: white;\n    font: 1em Helvetica, sans-serif;\n    padding: 30px;\n    border: ${props => props.border};\n    border-radius: 5px;\n    width: ${props => props.width};\n    height: ${props => props.height};\n    margin-top: 10px;\n`","import React from 'react'\nimport { useField } from 'formik'\nimport { ErrorText } from '../styles/textStyles'\nimport { Text, Input } from '../styles/input'\n\nconst FormikInput = ({ name, ...props }) => {\n  const [field, meta, helpers] = useField(name)\n  const showError = meta.touched && meta.error\n\n  if (props.type==='input' || props.type === 'password') {\n\n    return (<>\n      <Input\n        onChange={({ target }) => {\n          helpers.setValue(target.value)}}\n        onBlur={() => helpers.setTouched(true)}\n        value={field.value}\n        error={showError}\n        {...props}\n      />\n      {showError && <ErrorText>{meta.error}</ErrorText>}\n\n\n    </>)\n  }\n\n  return (\n    <>\n      <Text\n        onChange={({ target }) => {\n          helpers.setValue(target.value)}}\n        onBlur={() => helpers.setTouched(true)}\n        value={field.value}\n        error={showError}\n        {...props}\n      />\n      {showError && <ErrorText>{meta.error}</ErrorText>}\n    </>\n  )\n}\nexport default FormikInput\n\n","import React from 'react'\nimport { InfoText, ErrorText } from '../styles/textStyles'\n\nimport format from 'date-fns/format'\nimport Calendar from 'react-calendar'\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval'\nimport 'react-calendar/dist/Calendar.css'\n\nconst CustomCalendar = ({ checkDayRange, reservedDayRanges, selectedDayRange, datesNotAdded }) => {\n\n  const tileDisabled = ({ date }) => {\n    if (reservedDayRanges.length>0) {\n      //taulukon intervals sisällä on jokaisen varauksen päivämääräintervalli taulukossa\n      const intervals = reservedDayRanges.map(datesArray => eachDayOfInterval({\n        start: new Date(datesArray[0]),\n        end: new Date(datesArray[1])\n      }))\n      const disabledDays = intervals.flat() //kaikki varatut päivät tässä taulukossa\n\n      return disabledDays.find(dDate => {\n        const d = format(dDate, 'yyyy-MM-dd')\n        const dd = format(date, 'yyyy-MM-dd')\n        return d === dd\n      }\n      )\n    }\n  }\n\n  return (\n    <>\n      <Calendar\n        onChange={(dayRange) => checkDayRange(dayRange)}\n        selectRange={true}\n        onClickDay={(value) => checkDayRange([value])}\n        tileDisabled={tileDisabled}\n      />\n      {selectedDayRange.length<2\n        ? null\n        : <InfoText>{`Valitsemasi päivät: ${format(selectedDayRange[0], 'dd.MM.yyyy')}-${format(selectedDayRange[1], 'dd.MM.yyyy')}`}</InfoText>}\n      {datesNotAdded && selectedDayRange.length===0\n        ? <ErrorText>Päivämäärät vaaditaan.</ErrorText>\n        : null}\n    </>\n  )\n\n}\nexport default CustomCalendar","import React, { useState, useEffect } from 'react'\nimport { Formik, FieldArray } from 'formik'\nimport * as yup from 'yup'\nimport { loader } from 'graphql.macro'\nimport { useMutation, useQuery } from '@apollo/client'\n\nimport { Button } from '../styles/button'\n//import { Input } from '../styles/input'\nimport { Column, GuestsContainer } from '../styles/div'\nimport { BlackText, InfoText, HeadingSecondary, TextSecondary, ErrorText } from '../styles/textStyles'\n\n\n\nimport FormikInput from './FormikInput'\nimport CustomCalendar from './CustomCalendar'\nimport format from 'date-fns/format'\nimport '../styles/calendar.css'\nimport Select from '@material-ui/core/Select'\nimport { MenuItem } from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip'\n//import InputLabel from '@material-ui/core/InputLabel'\n//import Input from '@material-ui/core/Input'\n\nconst ADD_POST = loader('../graphql/mutations/addPost.graphql')\nconst ALL_POSTS = loader('../graphql/queries/allPosts.graphql')\nconst All_USERS = loader('../graphql/queries/allUsers.graphql')\n\nconst AddPost = (props) => {\n\n  const allUsers = useQuery(All_USERS)\n  const [users, setUsers] = useState([])\n  const [addPost /* , result */ ] = useMutation(ADD_POST, {\n    onError: (error) => {\n      props.showNotification(`Tapahtui virhe: ${error&&error.graphQLErrors[0]?error.graphQLErrors[0].extensions.exception.errors:{}}`)\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery({ query: ALL_POSTS })\n      if (dataInStore) {\n        store.writeQuery({\n          query: ALL_POSTS,\n          data: {\n            allPosts: [...dataInStore.allPosts, response.data.addPost]\n          }\n        })\n      }\n    }\n\n  })\n\n  const [calendarVisible, setCalendarVisible] = useState(false)\n  const [selectedDayRange, setSelectedDayRange] = useState([])\n  const [datesNotAdded, setDatesNotAdded] = useState(false)\n  const showWhenCalendarVisible = { display: calendarVisible ? '' : 'none' }\n\n  /* fetch all users for the form field guests: */\n  useEffect(() => {\n    if (allUsers.data) {\n      setUsers(allUsers.data.allUsers)\n    }\n    if (allUsers.error) {\n      console.log('Virheviesti palvelimelta: ', allUsers.error.message)\n      props.showNotification(`Tapahtui virhe: ${allUsers.error.message}`)\n    }\n  }, [allUsers])\n\n\n  const onSubmit = async (values, { resetForm }) => {\n    const { text, unidentifiedGuests, guests } = values\n    if (selectedDayRange.length<2) {\n      props.showNotification('Tapahtui virhe: Lisää päivämäärät!')\n      return\n    }\n\n    try {\n      await addPost({ variables: {\n        startDate: format(selectedDayRange[0], 'yyyy-MM-dd'),\n        endDate: format(selectedDayRange[1], 'yyyy-MM-dd'),\n        text,\n        unidentifiedGuests,\n        guests: guests.map(u => u.id)\n      } })\n      resetForm({})\n      props.showNotification('Vieraskirjamerkintäsi on nyt tallennettu!')\n      setSelectedDayRange([])\n      setCalendarVisible(false)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const validationSchema = yup.object().shape({\n    text: yup\n      .string()\n      .required('Teksti vaaditaan.'),\n    guests: yup\n      .array()\n      .when('unidentifiedGuests', {\n        is: unidentifiedGuests => unidentifiedGuests.length === 0,\n        then: yup.array().min(1, 'Lisää vähintään yksi vieras!')\n      }),\n    unidentifiedGuests: yup\n      .array()\n      .of(\n        yup.string()\n          .required('Lisää nimi tai paina Poista.')\n          .min(2, 'Nimessä on oltava vähintään kaksi kirjainta.')\n      )\n\n  })\n\n  const checkDayRange = (dayRange) => {\n    setSelectedDayRange(dayRange)\n  }\n\n  if (allUsers.loading) {\n    return <InfoText>Tietoja haetaan.</InfoText>\n  }\n\n  return (\n    <Column>\n      <HeadingSecondary>Kirjoita vieraskirjaan</HeadingSecondary>\n      <div style={showWhenCalendarVisible}>\n        <CustomCalendar datesNotAdded={datesNotAdded} checkDayRange={checkDayRange} reservedDayRanges={[]} selectedDayRange={selectedDayRange}/>\n      </div>\n      <Button type='submit' background='lightgrey' onClick={() => {\n        if (selectedDayRange.length<2 && calendarVisible) {\n          setDatesNotAdded(true)\n          return\n        }\n        setCalendarVisible(!calendarVisible)\n      }}>{calendarVisible\n          ? 'Piilota kalenteri'\n          : 'Näytä kalenteri lisätäksesi vierailun ajankohdan'\n        }</Button>\n\n      {selectedDayRange.length === 2\n        ? <BlackText>{format(selectedDayRange[0], 'dd.MM.yyyy')} - {format(selectedDayRange[1], 'dd.MM.yyyy')}</BlackText>\n        : null }\n\n      <Formik initialValues={{ text: '', unidentifiedGuests:[], guests: [] }}\n        onSubmit={onSubmit} validationSchema={validationSchema}>\n        {({ handleSubmit, values, handleChange, handleBlur, errors, touched }) =>\n          <form onSubmit={handleSubmit}>\n            <Column>\n              <FormikInput name='text' border='2px solid lightgrey' placeholder='Teksti' height='500px' width='500px'/>\n\n              {/* <InputLabel id='select-guests'>Lisää vieraiden nimet</InputLabel>  */}\n              <GuestsContainer labelId='select-guests'>\n                <Select\n                  displayEmpty\n                  name='guests'\n                  value={values.guests}\n                  onChange={handleChange}//* ({target}) => setSelectedUsers(target.value)\n                  onBlur={handleBlur}\n                  multiple\n                  /*  input={<Input />}  */\n                  renderValue={(selectedList) => {//selectedList on lista users-olioita,\n                    if (selectedList.length===0) {\n                      return <TextSecondary>Valitse vieraita mökin jäsenistä</TextSecondary>\n                    }\n                    return (\n                      <div >\n                        {selectedList.map((user) => (\n                          <Chip key={user.id} label={user.name} />//jotka renderöidään Chipeinä täällä\n                        )\n                        )}\n                      </div>\n                    )\n                  }}\n                >\n                  {users.map(u => <MenuItem key={u.id} value={u}>{u.name}</MenuItem>)/* palvelimelta haetuista käyttäjistä MenuItemeja, joita voi klikata */}\n                </Select>\n                {errors.guests &&\n                    touched.guests &&\n                        <ErrorText>\n                          {errors.guests}\n                        </ErrorText>}\n                <FieldArray\n                  onBlur={handleBlur}\n                  name='unidentifiedGuests' //tämä yhdistää lomakkeen values-kenttään unidentifiedGuests\n                  render={arrayHelpers => (\n                    <div>\n                      {values.unidentifiedGuests && values.unidentifiedGuests.length > 0\n                        ? (values.unidentifiedGuests.map((guest, index) => (\n                          <div key={index}>\n                            <FormikInput type='input' name={`unidentifiedGuests.${index}`} />\n                            <Button\n                              background='lightgrey'\n                              type='button'\n                              onClick={() => {\n                                props.showNotification(`Vieraslistasta on nyt poistettu ${guest}`)\n                                arrayHelpers.remove(index)}} // remove a guest from the unidentifiedGuests list\n                            >\n                                        Poista\n                            </Button>\n\n                            <Button\n                              background='lightgrey'\n                              type='button'\n                              onClick={() => {\n                                props.showNotification(`Vieraslistaan on nyt lisätty ${guest}`)\n                                arrayHelpers.insert(index, '')}} // insert an empty string at a position\n                            >\n                                    Lisää seuraava\n                            </Button>\n                          </div>\n                        ))\n                        )\n                        : /* show this button when unidentifiedGuests list is empty: */\n                        (\n                          <Button background='lightgrey' type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                 Lisää muita vieraita\n                          </Button>\n                        )}\n                      <div>\n                        <Button background='lightgrey' type=\"submit\" onClick={() => {\n                          if (values.guests.length!==0 && values.unidentifiedGuests.length!==0) {\n                            props.showNotification(`${values.guests.map(g => g.name)\n                              .reduce((prev, curr) => `${prev}, ${curr}`)}, ${values.unidentifiedGuests.reduce((prev, curr) => `${prev}, ${curr}`)}`)\n                          } else if (values.unidentifiedGuests.length!==0) {\n                            props.showNotification(`${values.unidentifiedGuests\n                              .reduce((prev, curr) => `${prev}, ${curr}`)}`)\n                          } else if (values.guests.length!==0) {\n                            props.showNotification(`${values.guests.map(g => g.name)\n                              .reduce((prev, curr) => `${prev}, ${curr}`)}`)\n                          }\n                        }}\n                        >\n                       Näytä lisäämäsi vieraat\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                />\n              </GuestsContainer>\n\n              <Button type='submit' background='lightgrey' height='40px' width='500px'>Lähetä</Button>\n            </Column>\n          </form>}\n      </Formik>\n    </Column>\n\n  )\n}\nexport default AddPost","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { loader } from 'graphql.macro'\nimport { useQuery } from '@apollo/client'\nimport Post from './Post'\nimport { Page, Column, BackgroundImage } from '../styles/div'\nimport { TextPrimary, InfoText, BlackText, HeadingSecondary, LinkTextColored, HeaderInImage } from '../styles/textStyles'\nimport AddPost from './AddPost'\nimport { StyledPost, Row, Borderline } from '../styles/div'\nimport { Input } from '../styles/input'\nimport format from 'date-fns/format'\n\n\nimport FlatList from 'flatlist-react'\n\nimport imageSummer from '../images/imageSummer.jpg'\n\nconst ALL_POSTS = loader('../graphql/queries/allPosts.graphql')\n\nconst Posts = (props) => {\n  const allPosts = useQuery(ALL_POSTS)\n  const [ posts, setPosts ] = useState(null)\n  const id = useParams().id\n\n  const [ searchInput, setSearchInput ] = useState('')\n\n  const renderPost = (p) => {\n    return (\n      <LinkTextColored key={p.id} to={`/vieraskirja/${p.id}`}>\n        <StyledPost>\n          <TextPrimary>{p.startDate} - {p.endDate}</TextPrimary>\n          <Row>\n            <TextPrimary>\n              {`${p.guests.concat(p.unidentifiedGuests)[0]}...`}\n            </TextPrimary>\n          </Row>\n        </StyledPost>\n      </LinkTextColored>\n\n    )}\n\n  useEffect(() => {\n    if (allPosts.data) {\n      //console.log(allPosts.data.allPosts)\n      setPosts(allPosts.data.allPosts)\n    }\n    if (allPosts.error) {\n      console.log('Virheviesti palvelimelta: ', allPosts.error.message)\n      props.showNotification(`Tapahtui virhe: ${allPosts.error.message}`)\n    }\n  }, [allPosts])\n\n  if (props.notification) {\n    return  null\n  }\n\n  if (allPosts.loading) {\n    return <InfoText>Vieraskirjaa haetaan.</InfoText>\n  }\n\n  if (!posts) {\n    return <InfoText>Vieraskirjan hakeminen ei onnistunut. Oletko kirjautunut sisään?</InfoText>\n  }\n\n  if (id) {\n    const post = posts.find(p => p.id === id)\n    return (\n      <Post post={post} showNotification={props.showNotification}/>\n    )\n  }\n\n  const onSearchInput = (event) => {\n    setSearchInput(event.target.value)\n\n  }\n\n  return (\n    <div>\n      <BackgroundImage height='250px' backgroundImage={imageSummer}><HeaderInImage>Vieraskirja</HeaderInImage></BackgroundImage>\n      <Page flexDirection='row' justifyContent='space-around'>\n\n        <Column>\n          <HeadingSecondary>Vieraskirja</HeadingSecondary>\n          <BlackText>Voit tehdä hakuja vieraskirjasta kirjoittajan, vieraan nimen ja vierailun ajankohdan perusteella. </BlackText>\n          <Input width='260px' border='2px solid lightgrey' value={searchInput} onChange={onSearchInput} placeholder='Nimi tai vierailun ajankohta'/>\n          <FlatList\n            list={posts.map(p => {\n              const post = { ...p,\n                startDate: format(new Date(p.startDate), 'dd.MM.yyyy'),\n                endDate: format(new Date(p.endDate), 'dd.MM.yyyy'),\n                guests: p.guests.map(g => g.name) }\n              return post\n            })}\n            renderItem={renderPost}\n            renderWhenEmpty={() => <BlackText>Ei osumia</BlackText>}\n            searchBy={['writtenBy.name', 'startDate', 'endDate', 'unidentifiedGuests', 'guests']}\n            searchTerm={searchInput}\n          />\n        </Column>\n        <Borderline></Borderline>\n        <AddPost showNotification={props.showNotification}/>\n\n      </Page>\n\n    </div>\n  )\n\n}\nexport default Posts","import React from 'react'\nimport { TextPrimary, BlackText } from '../styles/textStyles'\nimport { Button } from '../styles/button'\nimport { loader } from 'graphql.macro'\nimport { useMutation } from '@apollo/client'\nimport { Column, StyledTask } from '../styles/div'\n\nconst MARK_AS_DONE = loader('../graphql/mutations/markAsDone.graphql')\nconst REMOVE_TASK = loader('../graphql/mutations/removeTask.graphql')\nconst ALL_TASKS = loader('../graphql/queries/allTasks.graphql')\n\nconst Task = (props) => {\n\n  const [ markAsDone ] = useMutation(MARK_AS_DONE, {\n    onError: (error) => {\n      props.showNotification(`Tapahtui virhe: ${error&&error.graphQLErrors[0]?error.graphQLErrors[0].extensions.exception.errors:{}}`)\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery({ query: ALL_TASKS })\n      if (dataInStore) {\n        store.modify({\n          id: store.identify(response.data.markAsDone),\n          fields: {\n            done(cachedDone) {\n              return cachedDone === true\n            }\n          },\n          broadcast: false\n        })\n      }\n    }\n  })\n\n  const [ removeTask ] = useMutation(REMOVE_TASK, {\n    onError: (error) => {\n      props.showNotification(`Tapahtui virhe: ${error&&error.graphQLErrors[0]?error.graphQLErrors[0].extensions.exception.errors:{}}`)\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery({ query: ALL_TASKS })\n      if (dataInStore) {\n        store.evict({\n          fieldName: 'allTasks',\n          broadcast: false,\n        })\n        store.writeQuery({\n          query: ALL_TASKS,\n          data: {\n            allTasks: dataInStore.allTasks.filter(t => t.id !== response.data.removeTask.id)\n          }\n        })\n\n      }\n\n    } })\n\n  const handleClickMarkAsDone = async (event, description) => {\n    event.preventDefault()\n    try {\n      markAsDone({ variables:\n                {\n                  description\n                } })\n      props.showNotification('Työ on merkitty tehdyksi!')\n\n    } catch (e) {\n      console.log(e)\n      props.showNotification(`Tapahtui virhe: ${e}`)\n    }\n  }\n\n  const handleClickRemove = async (event, id) => {\n    event.preventDefault()\n    try {\n      removeTask({\n        variables: { id }\n      })\n      props.showNotification('Työ on nyt poistettu!')\n\n    } catch (e) {\n      props.showNotification(`Tapahtui virhe: ${e}`)\n    }\n  }\n\n  return (\n    <Column>\n\n      <StyledTask>\n        <Column>\n          <BlackText>{props.task.addedBy.name}</BlackText>\n          <BlackText>lisäsi työn:</BlackText>\n        </Column>\n        <TextPrimary>{props.task.description}</TextPrimary>\n        {props.task.done\n          ? <Column>\n            <BlackText>{props.task.doneBy.name}</BlackText>\n            <BlackText>merkitsi työn tehdyksi</BlackText>\n          </Column>\n          : <Button height='30' background='lightgrey' onClick={(e) => handleClickMarkAsDone(e, props.task.description)}>Merkitse työ tehdyksi</Button>}\n        <Button height='30' background='lightgrey' onClick={(e) => handleClickRemove(e, props.task.id)}>Poista työ</Button>\n      </StyledTask>\n    </Column>\n  )\n\n}\nexport default Task","import React from 'react'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport { loader } from 'graphql.macro'\nimport { useMutation } from '@apollo/client'\n\nimport { Button } from '../styles/button'\nimport { Column } from '../styles/div'\nimport { HeadingSecondary } from '../styles/textStyles'\n\nimport FormikInput from './FormikInput'\n\nconst ADD_TASK = loader('../graphql/mutations/addTask.graphql')\nconst ALL_TASKS = loader('../graphql/queries/allTasks.graphql')\n\nconst TaskForm = ({ onSubmit }) => {\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <Column>\n          <HeadingSecondary>Lisää työ</HeadingSecondary>\n          <FormikInput name='description' border='2px solid lightgrey' placeholder='Työn kuvaus' height='60px' width='500px'/>\n          <Button type='submit' background='lightgrey' height='40px' width='500px'>Tallenna</Button>\n        </Column>\n      </form>\n    </div>\n  )\n\n}\n\nconst AddTask = (props) => {\n\n  const [addTask /* , result */ ] = useMutation(ADD_TASK, {\n    onError: (error) => {\n      props.showNotification(`Tapahtui virhe: ${error&&error.graphQLErrors[0]?error.graphQLErrors[0].extensions.exception.errors:{}}`)\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery({ query: ALL_TASKS })\n      if (dataInStore) {\n        store.writeQuery({\n          query: ALL_TASKS,\n          data: {\n            allTasks: [...dataInStore.allTasks, response.data.addTask]\n          }\n        })\n      }\n    }\n\n  })\n\n  const onSubmit = async (values, { resetForm }) => {\n    const { description } = values\n\n    try {\n      await addTask({ variables: {\n        description\n      } })\n      resetForm({})\n      props.showNotification('Työ on nyt tallennettu!')\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const validationSchema = yup.object().shape({\n    description: yup\n      .string()\n      .min(5)\n      .required('Kuvaus vaaditaan.')\n  })\n\n  return (\n    <Formik initialValues={{ description: '' }}\n      onSubmit={onSubmit} validationSchema={validationSchema}>\n\n      {({ handleSubmit }) => <TaskForm onSubmit={handleSubmit} />}\n\n    </Formik>\n\n  )\n}\nexport default AddTask","export default __webpack_public_path__ + \"static/media/image.3e8dd774.jpg\";","import React, { useEffect, useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport Task from './Task'\nimport { InfoText, HeaderInImage, HeadingSecondary } from '../styles/textStyles'\nimport { loader } from 'graphql.macro'\nimport { Column, Page, Borderline, BackgroundImage } from '../styles/div'\nimport AddTask from './AddTask'\n\nimport imageSummer from '../images/image.jpg'\nimport 'react-calendar/dist/Calendar.css'\n\nconst ALL_TASKS = loader('../graphql/queries/allTasks.graphql')\n\nconst Tasks = (props) => {\n  const allTasks/* { data, error, loading } */ = useQuery(ALL_TASKS)\n  const [ tasks, setTasks] = useState(null)\n\n  useEffect(() => {\n    if (allTasks.data) {\n      setTasks(allTasks.data.allTasks)\n    }\n    if (allTasks.error) {\n      props.showNotification(`Tapahtui virhe: ${allTasks.error.message}`)\n    }\n  }, [allTasks])\n\n  if (props.notification) {\n    return null\n  }\n\n  if (allTasks.loading) {\n    <InfoText>Työpäiväkirjaa haetaan</InfoText>\n  }\n\n  if (!tasks) {\n    return <InfoText>Työpäiväkirjan hakeminen ei onnistunut. Oletko kirjautunut sisään?</InfoText>\n  }\n\n\n\n  return (\n    <div>\n\n      <BackgroundImage height='250px' backgroundImage={imageSummer}><HeaderInImage>Työpäiväkirja</HeaderInImage></BackgroundImage>\n      <Page flexDirection='row' justifyContent='space-around'>\n        <Column>\n          <HeadingSecondary>Työpäiväkirja</HeadingSecondary>\n          {tasks.map(t =>\n            <Task showNotification={props.showNotification} key={t.id} task={t}/>\n          )}\n        </Column>\n        <Borderline></Borderline>\n        <AddTask showNotification={props.showNotification}/>\n\n      </Page>\n\n    </div>\n  )\n\n}\nexport default Tasks","import { useApolloClient, useMutation } from '@apollo/client'\nimport { loader } from 'graphql.macro'\nimport { useHistory } from 'react-router-dom'\n\nconst LOGIN = loader('../graphql/mutations/login.graphql')\n\nconst useSignIn = (showNotification) => {\n  const [ login, result ] = useMutation(LOGIN, {\n    onError: (error) => {\n      showNotification(`Tapahtui virhe: ${error.graphQLErrors[0].message}`)\n    }\n  })\n  const client = useApolloClient()\n  const history = useHistory()\n\n  const signIn = async (username, password) => {\n    const result = await login({ variables: {\n      username, password\n    } })\n    localStorage.setItem('mokkikirja-token', result.data.login.value)\n    client.resetStore()\n    if (result.data) {\n      showNotification('Kirjautuminen onnistui!')\n      history.push('/vieraskirja')\n    }\n    return result\n  }\n  console.log(result)\n  return [signIn, result]\n\n}\nexport default useSignIn","import React from 'react'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport { useMutation } from '@apollo/client'\n\nimport { Button } from '../styles/button'\nimport { Column, Page } from '../styles/div'\nimport { BlackText } from '../styles/textStyles'\nimport useSignIn from '../hooks/useSignIn'\n\nimport FormikInput from './FormikInput'\nimport { loader } from 'graphql.macro'\n\nconst CREATE_USER = loader('../graphql/mutations/createUser.graphql')\n\nconst SignUpForm = ({ onSubmit }) => {\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <Column>\n          <BlackText>Rekisteröidy antamalla nimesi ja valitsemalla käyttäjätunnus ja salasana.</BlackText>\n          <FormikInput type='input' name='name' placeholder='Nimi' border='2px solid lightgrey' height='40px' width='400px'/>\n          <FormikInput type='input' name='username' placeholder='Käyttäjätunnus' border='2px solid lightgrey' height='40px' width='400px'/>\n          <FormikInput type='input' name='password' placeholder='Salasana' border='2px solid lightgrey' height='40px' width='400px'/>\n          <FormikInput type='input' name='passwordConf' placeholder='Salasana uudestaan' border='2px solid lightgrey' height='40px' width='400px'/>\n          <Button type='submit' background='lightgrey' height='40px' width='400px'>Rekisteröidy</Button>\n        </Column>\n      </form>\n    </div>\n  )\n}\n\nconst SignUp = (props) => {\n\n  const [signIn] = useSignIn(props.showNotification)\n\n  const [createUser /* , result */ ] = useMutation(CREATE_USER, {\n    onError: (error) => {\n      props.showNotification(`Tapahtui virhe: ${error.graphQLErrors[0].message}`)\n    }\n  })\n\n  const onSubmit = async (values) => {\n    const { name, username, password } = values\n\n    try {\n      //rekisteröidytään:\n      await createUser({ variables: {\n        name,\n        username,\n        password,\n\n      } })\n      //kirjataan käyttäjä sisään:\n      await signIn(username, password)\n\n    } catch (e) {\n      console.log(e)\n    }\n\n  }\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string(),\n    username: yup\n      .string()\n      .min(6).max(30)\n      .required('Käyttäjänimi vaaditaan.'),\n    password: yup\n      .string()\n      .min(7).max(50)\n      .required('Salasana vaaditaan.'),\n    passwordConf: yup\n      .string()\n      .oneOf([yup.ref('password'), null])\n      .required('Salasanan varmistus vaaditaan.'),\n  })\n  //Formikin sisällä (lapsena) on funktio, joka saa parametrikseen Formikin funktion, joka puolestaan annetaan\n  //kirjautumislomakkeelle propsina.\n  return (\n    <Page flexDirection='row' justifyContent='center' alignItems='center'>\n      <Formik initialValues={{ name: '', username: '', password: '', passwordConf: '' }}\n        onSubmit={onSubmit} validationSchema={validationSchema}>\n\n        {({ handleSubmit }) => <SignUpForm onSubmit={handleSubmit} />}\n\n      </Formik>\n    </Page>\n  )\n\n}\n\nexport default SignUp","import React from 'react'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport useSignIn from '../hooks/useSignIn'\n\nimport { Button } from '../styles/button'\nimport { Column, Page } from '../styles/div'\nimport { BlackText } from '../styles/textStyles'\n\nimport FormikInput from './FormikInput'\n\nconst SignInForm = ({ onSubmit }) => {\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <Column>\n          <BlackText>Kirjoita käyttäjätunnuksesi ja salasanasi alla oleviin kenttiin.</BlackText>\n          <FormikInput type='input' name='username' border='2px solid lightgrey' placeholder='Käyttäjätunnus' height='40px' width='400px'/>\n          <FormikInput type='password' name='password' border='2px solid lightgrey' placeholder='Salasana' height='40px' width='400px'/>\n          <Button type='submit' background='lightgrey' height='40px' width='400px'>Kirjaudu sisään</Button>\n        </Column>\n      </form>\n    </div>\n  )\n\n}\n\nconst SignIn = (props) => {\n\n  const [signIn, result ] = useSignIn(props.showNotification)\n\n  const onSubmit = async (values) => {\n    const { username, password } = values\n    try {\n      await signIn(username, password) // kirjaudutaan\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const validationSchema = yup.object().shape({\n    password: yup\n      .string()\n      .required('Salasana vaaditaan.'),\n    username: yup\n      .string()\n      .required('Käyttäjänimi vaaditaan.')\n  })\n\n  if (result.loading) {\n    return <div>Kirjaudutaan</div>\n  }\n\n  return (\n    <Page flexDirection='row' justifyContent='center' alignItems='center'>\n      <Formik initialValues={{ username: '', password: '' }}\n        onSubmit={onSubmit} validationSchema={validationSchema}>\n\n        {({ handleSubmit }) => <SignInForm onSubmit={handleSubmit} />}\n\n      </Formik>\n    </Page>\n  )\n}\nexport default SignIn","import React from 'react'\nimport { useApolloClient } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '../styles/button'\nimport { Info, Page, Row } from '../styles/div'\nimport { InfoText } from '../styles/textStyles'\n\nconst SignOut = (props) => {\n  const client = useApolloClient()\n  const history = useHistory()\n  const handleClick = () => {\n    localStorage.clear()\n    client.resetStore()\n    props.showNotification('Kirjauduit ulos!')\n    history.push('/')\n  }\n\n\n  return (\n    <Page flexDirection='row' justifyContent='center' alignItems='center'>\n      <Info>\n        <InfoText>Haluatko varmasti kirjautua ulos?</InfoText>\n        <Row>\n          <Button type='submit' onClick={handleClick} background='#618685'>Kyllä</Button>\n          <Button type='submit' onClick={() => history.goBack()} background='#618685'>En</Button>\n        </Row>\n      </Info>\n    </Page>\n  )\n}\n\nexport default SignOut","import React, { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { loader } from 'graphql.macro'\nimport { Navigation, AccountInfo, Column, Row } from '../styles/div'\nimport { LinkText, WhiteText } from '../styles/textStyles'\n\nconst ME = loader('../graphql/queries/me.graphql')\n\nconst User = (props) => {\n\n  const  { data, error, loading } = useQuery(ME)\n  const [ user, setUser ] = useState(null)\n\n  useEffect(() => {\n    if (data) {\n      setUser(data.me)\n    }\n    else if (error) {\n      props.showNotification(`Tapahtui virhe: ${error.message}`)\n    }\n  }, [data])\n\n  if (loading) {\n    return (\n      <div>Käyttäjätietoja haetaan</div>\n    )\n  }\n  \n  return (\n    <div>\n      {user\n        ?   <div>\n          <AccountInfo>\n            <Row>\n              <LinkText to={'/varaukset'}>Varaa mökki</LinkText>\n              <Column>\n                <WhiteText>{user.name}</WhiteText>\n                <LinkText to='/kirjaudu-ulos'>Kirjaudu ulos</LinkText>\n              </Column>\n            </Row>\n          </AccountInfo>\n          <Navigation>\n            <LinkText to='/tyopaivakirja'>Työpäiväkirja</LinkText>\n            <LinkText to='/vieraskirja'>Vieraskirja</LinkText>\n          </Navigation>\n        </div>\n        :   <div>\n          <AccountInfo><LinkText to='/kirjaudu'>Kirjaudu sisään</LinkText></AccountInfo>\n          <Navigation>\n            <LinkText to='/rekisteroidy'>Rekisteröidy</LinkText>\n          </Navigation>\n        </div>\n      }\n\n    </div>\n  )\n}\nexport default User","export default __webpack_public_path__ + \"static/media/imageGoldeneye.874265f5.jpg\";","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Column, Page, Borderline, BackgroundImage } from '../styles/div'\nimport { BlackText, HeadingSecondary, HeaderInImage } from '../styles/textStyles'\nimport { Button } from '../styles/button'\nimport { loader } from 'graphql.macro'\nimport { useApolloClient, useMutation, useQuery } from '@apollo/client'\n\nimport format from 'date-fns/format'\nimport { areIntervalsOverlapping } from 'date-fns'\nimport CustomCalendar from './CustomCalendar'\n\nimport imageGoldeneye from '../images/imageGoldeneye.jpg'\n\nconst ADD_RESERVATION = loader('../graphql/mutations/addReservation.graphql')\nconst ALL_RESERVATIONS = loader('../graphql/queries/allReservations.graphql')\nconst ME = loader('../graphql/queries/me.graphql')\nconst REMOVE_RESERVATION = loader('../graphql/mutations/removeReservation.graphql')\n\nconst Reservations = (props) => {\n  const client = useApolloClient()\n  const me = client.readQuery({ query: ME })\n  const history = useHistory()\n\n  const [selectedDayRange, setSelectedDayRange] = useState([])\n  const [reservedDayRanges, setReservedDayRanges] = useState([]) //taulukko, jonka alkioina taulukot kunkin varauksen päivämääristä\n  const [myReservations, setMyReservations] = useState([])\n\n  const allReservations/* { data, error, loading } */ = useQuery(ALL_RESERVATIONS)\n  const [addReservation /* , result */ ] = useMutation(ADD_RESERVATION, {\n    onError: (error) => {\n      props.showNotification(`Tapahtui virhe: ${error&&error.graphQLErrors[0]?error.graphQLErrors[0].extensions.exception.errors:{}}`)\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery({ query: ALL_RESERVATIONS })\n      if (dataInStore) {\n        store.writeQuery({\n          query: ALL_RESERVATIONS,\n          data: {\n            allReservations: [...dataInStore.allReservations, response.data.addReservation]\n          }\n        })\n      }\n    }\n  })\n\n  const [ removeReservation ] = useMutation(REMOVE_RESERVATION, {\n    onError: (error) => {\n      props.showNotification(`Tapahtui virhe: ${error&&error.graphQLErrors[0]?error.graphQLErrors[0].extensions.exception.errors:{}}`)\n    },\n    update: (store, response) => {\n      const dataInStore = store.readQuery({ query: ALL_RESERVATIONS })\n      if (dataInStore) {\n        store.evict({\n          fieldName: 'allReservations',\n          broadcast: false,\n        })\n        store.writeQuery({\n          query: ALL_RESERVATIONS,\n          data: {\n            allReservations: dataInStore.allReservations.filter(p => p.id !== response.data.removeReservation.id)\n          }\n        })\n\n      }\n\n    } })\n\n\n  useEffect(() => {\n    if (allReservations.data) {\n      setReservedDayRanges(allReservations.data.allReservations.map(r => [ r.startDate, r.endDate ]))\n      setMyReservations(allReservations.data.allReservations.filter(r => r.reservedBy.id === me.me.id))\n    }\n    if (allReservations.error) {\n      props.showNotification(`Tapahtui virhe: ${allReservations.error.message}`)\n    }\n  }, [allReservations])\n\n  const handleClickBook = async () => {\n    console.log('startDate: ', selectedDayRange[0], 'endDate: ', selectedDayRange[1])\n    if (selectedDayRange.length<2) {\n      props.showNotification('Tapahtui virhe: lisää saapumis- ja lähtöpäivä!')\n    } else {\n      try {\n        await addReservation({\n          variables: {\n            startDate: format(selectedDayRange[0], 'yyyy-MM-dd'),\n            endDate: format(selectedDayRange[1], 'yyyy-MM-dd')\n          }\n        })\n        props.showNotification('Varaus on nyt tehty! Näet sen tällä sivulla.')\n\n      } catch(e) {\n        props.showNotification(`Tapahtui virhe: ${e}`)\n      }\n    }\n\n  }\n\n  //tarkistaa, sisältääkö kalenterista valittu ajanjakso varattuja päiviä\n  const checkDayRange = (dayRange) => {\n    if (dayRange.length===2) {\n      const a =  reservedDayRanges.map(array => {\n        return areIntervalsOverlapping(\n          { start: new Date(array[0]), end: new Date(array[1]) },\n          { start: new Date(dayRange[0]), end: new Date(dayRange[1]) }\n        )\n      })\n      if (a.find(b => b===true)) {\n        props.showNotification('Tapahtui virhe: Valitsemasi ajanjakso sisältää varattuja päiviä. Yritä uudestaan!')\n      } else {\n        setSelectedDayRange(dayRange)\n      }\n    } else {\n      setSelectedDayRange(dayRange)\n    }\n\n  }\n\n  const handleClickRemove = async (event, id) => {\n    try {\n      removeReservation({\n        variables: { id }\n      })\n      history.push('/varaukset')\n      props.showNotification('Varaus on nyt poistettu!')\n    } catch(e) {\n      console.log(e)\n      props.showNotification(`Tapahtui virhe: ${e}`)\n    }\n  }\n\n  return (\n    <div>\n      <BackgroundImage height='250px' backgroundImage={imageGoldeneye}><HeaderInImage>Varaukset</HeaderInImage></BackgroundImage>\n      <Page flexDirection='row' justifyContent='space-around'>\n        {myReservations.length!==0\n          ? <Column><HeadingSecondary>Varauksesi</HeadingSecondary>\n            {myReservations.map(r =>\n              <Column key={r.id}>\n                <BlackText>\n                  {format(new Date(r.startDate), 'dd.MM.yyyy')} - {format(new Date(r.endDate), 'dd.MM.yyyy')}\n                </BlackText>\n                <Button background='lightgrey' onClick={(e) => handleClickRemove(e, r.id)}>Poista varaus</Button>\n              </Column>\n            )\n            }\n          </Column>\n          : <HeadingSecondary>Sinulla ei ole tällä <br/>\n        hetkellä varauksia</HeadingSecondary>}\n        <Borderline></Borderline>\n        <Column>\n          <HeadingSecondary>Varaa mökki</HeadingSecondary>\n          <BlackText>Valitse kalenterista saapumis- ja lähtöpäivä.</BlackText>\n          <CustomCalendar checkDayRange={checkDayRange} reservedDayRanges={reservedDayRanges} selectedDayRange={selectedDayRange} />\n          <Button background='lightgrey'\n            onClick={() => handleClickBook()}>Tee varaus</Button>\n        </Column>\n\n      </Page>\n    </div>\n  )\n\n}\nexport default Reservations\n","import React, { useState } from 'react'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport { Navigation, Margin, BackgroundImage } from './styles/div'\nimport Notification from './components/Notification'\nimport { HeaderInImage, LiInImage } from './styles/textStyles'\nimport Posts from './components/Posts'\nimport Tasks from './components/Tasks'\nimport SignUp from './components/SignUp'\nimport SignIn from './components/SignIn'\nimport SignOut from './components/SignOut'\nimport User from './components/User'\nimport Reservations from './components/Reservations'\n\nimport imageSummer from './images/imageSummer.jpg'\nimport 'react-calendar/dist/Calendar.css'\n\n\nconst App = () => {\n  const [ notification, setNotification ] = useState('')\n\n  const showNotification = (message) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, 3000)\n  }\n\n  return (\n    <Router>\n      {notification\n        ? <Notification notification={notification}/>\n        : <Margin></Margin>}\n\n      <User showNotification={showNotification}/>\n\n      <Switch>\n        <Route path='/rekisteroidy'>\n          <SignUp showNotification={showNotification}/>\n        </Route>\n        <Route path='/kirjaudu'>\n          <SignIn showNotification={showNotification}/>\n        </Route>\n        <Route path='/kirjaudu-ulos'>\n          <SignOut showNotification={showNotification}/>\n        </Route>\n        <Route path='/tyopaivakirja'>\n          <Tasks showNotification={showNotification}/>\n        </Route>\n        <Route path='/vieraskirja/:id'>\n          <Posts showNotification={showNotification}/>\n        </Route>\n        <Route path='/vieraskirja'>\n          <Posts showNotification={showNotification}/>\n        </Route>\n        <Route path='/varaukset'>\n          <Reservations showNotification={showNotification}/>\n        </Route>\n\n        <BackgroundImage height='600px' backgroundImage={imageSummer}>\n          <HeaderInImage >Meidän mökki</HeaderInImage>\n          <LiInImage bottom='50%'>Vieraskirja</LiInImage>\n          <LiInImage bottom='10%' >Työpäiväkirja</LiInImage>\n          <LiInImage bottom='30%'>Varaukset</LiInImage>\n        </BackgroundImage>\n\n      </Switch>\n\n      <Navigation>\n      </Navigation>\n      {notification\n        ? <Notification notification={notification}/>\n        : <Margin> </Margin>}\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'\nimport { setContext } from 'apollo-link-context'\n\n//import { onError } from 'apollo-link-error'\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('mokkikirja-token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}`: null,\n    }\n  }\n})\n\nconst httpLink = new HttpLink({\n  uri: '/graphql',\n})\n\n/* const logoutLink = onError(({ networkError }) => {\n  if (networkError.statusCode === 401) {\n    localStorage.clear()\n    client.resetStore()\n    alert('Sinun täytyy kirjautua uudestaan!')\n    history.push('/kirjaudu')\n  }\n}) */\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink),\n  /* link: logoutLink.concat(authLink.concat(httpLink)), */\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root'))\n\n"],"sourceRoot":""}